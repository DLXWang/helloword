plugins {
    id 'org.springframework.boot' version '2.5.15' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
}


apply plugin : 'org.springframework.boot'
apply plugin : 'io.spring.dependency-management'
apply plugin : 'java'
apply plugin : 'java-library'
apply plugin : 'idea'
apply plugin : 'maven-publish'


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.3"//2021.0.5 和 2.6.9 不合
    }
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'//2.6.9的是reactive ，swagger 不合
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //implementation 'org.springframework.boot:spring-boot-starter-webflux'

    /** open-feign */
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'


    /** open-feign-reactive */
    implementation 'com.playtika.reactivefeign:feign-reactor-spring-configuration:3.3.0'
    implementation("com.playtika.reactivefeign:feign-reactor-core:3.3.0")
    implementation("com.playtika.reactivefeign:feign-reactor-cloud:3.3.0")
    implementation("com.playtika.reactivefeign:feign-reactor-webclient:3.3.0")

    /** akka */
    implementation 'com.typesafe.akka:akka-actor_2.13:2.6.16'
    implementation 'com.typesafe.akka:akka-testkit_2.12:2.5.19'

    /** lombok */
    compileOnly("org.projectlombok:lombok:1.18.18")
    annotationProcessor("org.projectlombok:lombok:1.18.18")

    /** log4j2 */
    implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.7.1'
    implementation 'com.lmax:disruptor:3.4.4'

    implementation 'org.apache.commons:commons-lang3:3.12.0'



    /** redis */
    api 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

    /** mongo */
    api 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    api 'org.springframework.boot:spring-boot-starter-data-mongodb'


    /** mysql */
    api group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.5.3.1'
    runtimeOnly 'mysql:mysql-connector-java:8.0.32'


    /** websocket */
    //implementation 'org.springframework.boot:spring-boot-starter-websocket' //--- tomcat , 而不是 netty web
    // implementation 'io.projectreactor.netty:reactor-netty'

    def deployEnv = System.getenv("deployEnv")
    def commonVersion = (deployEnv == "prod") ? "[2.0.0, 3.0.0[" : "2.0.0-" + deployEnv + "-SNAPSHOT"
    //api("com.xt.zeus:zeus-extention-jwt:" + commonVersion)


    // localDatetime
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0' // Use the latest version available



    /** websocket - endpoint */
    api "org.yeauty:netty-websocket-spring-boot-starter:0.12.0"


    /** swagger */
    api "io.springfox:springfox-boot-starter:3.0.0"
    api 'org.springframework.boot:spring-boot-starter-validation'

    api 'com.google.code.gson:gson:2.10.1'

}

test {
    useJUnitPlatform()
}

jar {
    enabled = false
}

bootJar {
    destinationDirectory = file("$project.projectDir/target")
}

clean.doFirst {
    delete "$project.projectDir/target"
}
